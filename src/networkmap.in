#!/usr/bin/env @PYTHON@
# -*- Mode: Python; coding: utf-8; indent-tabs-mode: nil; tab-width: 4 -*-

import os
import sys
import logging

conf = {
    'PYTHON': '@PYTHON@',
    'VERSION': '@VERSION@',
    'RESOURCE_PATH': '@RESOURCE_PATH@',
    'localedir': '@localedir@',
    'pkgdatadir': '@pkgdatadir@'
}

# --- Insert the site-packages install path for the installed modules ---
# This is the critical fix so Python can find the installed networkmap package.
# The path here matches the Meson install path for Python packages.
# Adjust if your Meson setup uses a different path or variable.

python_version = f"python{sys.version_info.major}.{sys.version_info.minor}"
site_packages_path = os.path.join('/usr/local/lib', python_version, 'site-packages')

if site_packages_path not in sys.path:
    sys.path.insert(0, site_packages_path)

# --- BEGIN Adwaita Import Test ---
print("DEBUG: Attempting direct import of Adwaita...", file=sys.stderr)
try:
    import gi
    gi.require_version("Adw", "1")
    from gi.repository import Adw
    print("DEBUG: Direct import of Adwaita (Adw) SUCCEEDED.", file=sys.stderr)
except Exception as e_adw_test:
    print(f"DEBUG: Direct import of Adwaita (Adw) FAILED: {type(e_adw_test).__name__}: {e_adw_test}", file=sys.stderr)
# --- END Adwaita Import Test ---

# 2. Load GResources
try:
    from gi.repository import Gio, GLib  # Import GLib for GLib.Error

    resource_path = conf['RESOURCE_PATH']

    if os.path.exists(resource_path):
        print(f"INFO: Attempting to load resource from: {resource_path}", file=sys.stderr)
        resource = Gio.Resource.load(resource_path)
        Gio.resources_register(resource)
        print(f"INFO: Successfully loaded and registered resources from: {resource_path}", file=sys.stderr)
    else:
        print(f"ERROR: Compiled GResource file not found at {resource_path}. Application may fail to load UI.", file=sys.stderr)

except ImportError as e:
    print(f"ERROR: Could not import Gio/GLib for GResource loading: {e}", file=sys.stderr)
    sys.exit(1)
except GLib.Error as e:
    print(f"ERROR: GLib.Error loading GResource {resource_path}: {e}", file=sys.stderr)
    sys.exit(1)
except Exception as e:
    print(f"ERROR: Unexpected error during GResource loading: {e}", file=sys.stderr)
    sys.exit(1)

# 3. Import and run the main application module
try:
    from networkmap import main as app_main
except ImportError as e:
    print(f"ERROR: Failed to import the main application module 'networkmap.main'.", file=sys.stderr)
    print(f"Error details: {type(e).__name__}: {e}", file=sys.stderr)
    sys.exit(1)
except Exception as e:
    print(f"ERROR: Unexpected error while importing 'networkmap.main'.", file=sys.stderr)
    print(f"Error details: {type(e).__name__}: {e}", file=sys.stderr)
    sys.exit(1)

if __name__ == '__main__':
    sys.exit(app_main.main(sys.argv))
